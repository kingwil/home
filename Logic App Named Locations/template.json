{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageaccount_name": {
            "type": "string",
            "defaultValue": "[uniqueString(resourceGroup().id)]",
            "metadata": {
                "description": "storage account name to save output"
            }
        },
        "storageaccount_container_name": {
            "type": "string",
            "defaultValue": "files",
            "metadata": {
                "description": "storage account name to save output"
            }
        },
        "logicapp_name": {
            "type": "string",
            "defaultValue": "logicapp-named-locations",
            "metadata": {
                "description": "Name of the logic app"
            }
        },
        "csv_filename": {
            "type": "string",
            "defaultValue": "ipranges.csv",
            "metadata": {
                "description": "Name of the output CSV file"
            }
        },
        "logicapp_storage_connector_name": {
            "type": "string",
            "defaultValue": "azureblob",
            "metadata": {
                "description": "Name of logic app connector to Azure Blob storage"
            }
        }
    },
    "functions": [],
    "variables": {},
    "resources": [
        {
            "name": "[parameters('storageaccount_name')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageaccount_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount_name'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageaccount_name'), '/default/', parameters('storageaccount_container_name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageaccount_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "name": "[parameters('logicapp_storage_connector_name')]",
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount_name'))]"
            ],
            "tags": {
            },
            "properties": {
                "displayName": "[parameters('logicapp_storage_connector_name')]",
                "parameterValues": {
                    "accountName": "[parameters('storageaccount_name')]",
                    "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount_name')), '2019-04-01').keys[0].value]"
                },
                "customParameterValues": {
                },
                "nonSecretParameterValues": {
                },
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, 'azureblob')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicapp_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('logicapp_storage_connector_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Create_CSV_table": {
                            "runAfter": {
                                "For_each_Named_Location": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "format": "CSV",
                                "from": "@variables('IPNamedLocations')"
                            }
                        },
                        "For_each_Named_Location": {
                            "foreach": "@body('Parse_Named_Locations')?['value']",
                            "actions": {
                                "For_each_IP_Named_Location": {
                                    "foreach": "@items('For_each_Named_Location')['ipRanges']",
                                    "actions": {
                                        "Add_IP_Named_Location_to_JSON_array": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "IPNamedLocations",
                                                "value": {
                                                    "CIDR": "@items('For_each_IP_Named_Location')?['cidrAddress']",
                                                    "Location": "@items('For_each_Named_Location')?['displayName']"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach"
                                }
                            },
                            "runAfter": {
                                "Initialize_JSON_array_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_JSON_array_variable": {
                            "runAfter": {
                                "Parse_Named_Locations": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPNamedLocations",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Parse_Named_Locations": {
                            "runAfter": {
                                "Query_Microsoft_Graph_for_Conditional_Access_Named_Locations": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Query_Microsoft_Graph_for_Conditional_Access_Named_Locations')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "@@odata.type": {
                                                        "type": "string"
                                                    },
                                                    "createdDateTime": {},
                                                    "displayName": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "ipRanges": {
                                                        "items": {
                                                            "properties": {
                                                                "@@odata.type": {
                                                                    "type": "string"
                                                                },
                                                                "cidrAddress": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "@@odata.type",
                                                                "cidrAddress"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "isTrusted": {
                                                        "type": "boolean"
                                                    },
                                                    "modifiedDateTime": {}
                                                },
                                                "required": [
                                                    "@@odata.type",
                                                    "id",
                                                    "displayName",
                                                    "modifiedDateTime",
                                                    "createdDateTime",
                                                    "isTrusted",
                                                    "ipRanges"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Query_Microsoft_Graph_for_Conditional_Access_Named_Locations": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/identity/conditionalAccess/namedLocations?$filter=isof('microsoft.graph.ipNamedLocation')"
                            }
                        },
                        "Write_CSV_to_blob_storage": {
                            "runAfter": {
                                "Create_CSV_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/files",
                                    "name": "[parameters('csv_filename')]",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('logicapp_storage_connector_name'))]",
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, 'azureblob')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}