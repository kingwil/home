{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.539.46024",
      "templateHash": "16054810754449021560"
    }
  },
  "parameters": {
    "AdminPassword": {
      "type": "secureString",
      "defaultValue": "Pass@w0rd$$$",
      "metadata": {
        "description": "Password for the Jump and Workstation VMs"
      }
    },
    "AdminUser": {
      "type": "string",
      "defaultValue": "LabAdmin",
      "metadata": {
        "description": "The defualt username for the administrator user"
      }
    },
    "VMSize": {
      "type": "string",
      "defaultValue": "Standard_B1ms",
      "metadata": {
        "description": "Virtual Machine Size"
      }
    }
  },
  "functions": [],
  "variables": {
    "vm_dc1_nic_name": "srv-dc1-nic",
    "vm_dc1_name": "srv-dc1",
    "vnet_name": "test-vnet",
    "pip_name": "bastion-pip",
    "subnet_name": "tier0-subnet",
    "dc_ip": "10.0.2.5",
    "nsg_name": "tier0-nsg",
    "bastion_name": "xdr-bastion"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[variables('pip_name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      },
      "sku": {
        "name": "Standard"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-04-01",
      "name": "[format('{0}/{1}', variables('vnet_name'), variables('subnet_name'))]",
      "properties": {
        "addressPrefix": "10.0.2.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-04-01",
      "name": "[variables('vm_dc1_nic_name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('dc_ip')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "name": "[variables('vm_dc1_name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VMSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-datacenter-gensecond",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[format('{0}_OsDisk', variables('vm_dc1_name'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('vm_dc1_name')]",
          "adminUsername": "[parameters('AdminUser')]",
          "adminPassword": "[parameters('AdminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm_dc1_nic_name'))]"
            }
          ]
        },
        "licenseType": "Windows_Server"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vm_dc1_nic_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/Microsoft.Powershell', variables('vm_dc1_name'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/kingwil/home/master/ADDS%20DSC%20Automation%20Account/adds/Enable_RebootIfNeededLCM.ps1"
          ],
          "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File Enable_RebootIfNeededLCM.ps1"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vm_dc1_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/Microsoft.Powershell.DSC', variables('vm_dc1_name'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.83",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "configuration": {
            "url": "https://github.com/kingwil/home/raw/master/ADDS%20DSC%20Automation%20Account/adds/config-adds.ps1.zip",
            "script": "config-adds.ps1",
            "function": "config-adds"
          }
        },
        "protectedSettings": {
          "configurationArguments": {
            "Credential": {
              "userName": "[parameters('AdminUser')]",
              "password": "[parameters('AdminPassword')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vm_dc1_name'))]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', split(format('{0}/Microsoft.Powershell', variables('vm_dc1_name')), '/')[0], split(format('{0}/Microsoft.Powershell', variables('vm_dc1_name')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-04-01",
      "name": "[variables('vnet_name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[variables('nsg_name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ALLOW-RDP",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange": "3389",
              "destinationAddressPrefix": "[variables('dc_ip')]",
              "access": "Allow",
              "priority": 1234,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-04-01",
      "name": "[format('{0}/AzureBastionSubnet', variables('vnet_name'))]",
      "properties": {
        "addressPrefix": "10.0.0.0/27"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[0], split(format('{0}/{1}', variables('vnet_name'), variables('subnet_name')), '/')[1])]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2020-07-01",
      "name": "[variables('bastion_name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/AzureBastionSubnet', variables('vnet_name')), '/')[0], split(format('{0}/AzureBastionSubnet', variables('vnet_name')), '/')[1])]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_name'))]"
              },
              "privateIPAllocationMethod": "Dynamic"
            },
            "name": "bastionIpConf"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/AzureBastionSubnet', variables('vnet_name')), '/')[0], split(format('{0}/AzureBastionSubnet', variables('vnet_name')), '/')[1])]"
      ]
    }
  ]
}